@page "/lab/labels/{accession}"
@model dynamic
@{
    Layout = null;  // full-bleed print page
}

<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Label @RouteData.Values["accession"]</title>

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">

<style>
  :root {
    --label-w: 90mm;   /* common Zebra 90x30 mm label */
    --label-h: 30mm;
    --gap: 6mm;
    --fg: #111;
  }

  body { background: #f6f8fb; }
  .toolbar { position: sticky; top:0; background: #f6f8fb; z-index: 2; }

  .grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(var(--label-w), 1fr));
    gap: var(--gap);
    padding: 16px;
  }

  .label {
    width: var(--label-w);
    height: var(--label-h);
    border: 1px solid #d9e0ea;
    background: white;
    color: var(--fg);
    font-family: system-ui, -apple-system, Segoe UI, Roboto, "Helvetica Neue", Arial, "Noto Sans", "Liberation Sans", sans-serif;
    padding: 6px 8px;
    overflow: hidden;
  }

  .hdr { display:flex; align-items:center; gap:8px; margin-bottom:2px; }
  .brand { font-weight:700; font-size: 11px; letter-spacing:.2px; }
  .tiny { font-size: 10px; color:#6c757d; }
  .main { display:flex; gap:8px; }
  .left { flex: 1 1 auto; min-width: 0; }
  .right { width: 42%; text-align:center; }
  .big { font-weight:700; font-size: 13px; letter-spacing:.2px; }
  .mono { font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, "Liberation Mono", monospace; }
  .tests { font-size: 10px; line-height: 1.1; white-space:nowrap; overflow:hidden; text-overflow:ellipsis; }
  .badge-status { font-size: 10px; }

  .barcode { max-width:100%; height: 22mm; object-fit: contain; }

  @@media print {
    .toolbar{ display:none !important; }
    body { background: white; }
    @@page { margin: 5mm; }
    .grid { padding:0; gap:4mm; }
    .label { break-inside: avoid; border: 1px solid #000; }
  }
</style>
</head>
<body>

<div class="toolbar border-bottom px-3 py-2 d-print-none">
  <div class="d-flex align-items-center gap-2">
    <h5 class="m-0">Print Labels</h5>
    <div class="ms-auto d-flex align-items-center gap-2">
      <label class="form-label m-0 small">Copies</label>
      <input id="copies" type="number" class="form-control form-control-sm" min="1" value="4" style="width:80px">
      <button class="btn btn-primary btn-sm" onclick="render()">Preview</button>
      <button class="btn btn-success btn-sm" onclick="window.print()">Print</button>
    </div>
  </div>
</div>

<div id="host" class="grid"></div>

    <script>
        const $=(s,r=document)=>r.querySelector(s);
        const accession = decodeURIComponent("@(RouteData.Values["accession"]?.ToString() ?? "")");
        let model = null;

        async function load(){
          const res = await fetch(`/api/v1/lab/labels/by-accession/${encodeURIComponent(accession)}`);
          if(!res.ok){ $('#host').innerHTML = `<div class="text-danger p-3">Accession not found.</div>`; return; }
          model = await res.json();
          render();

          // mark printed (idempotent) AFTER we have data
          try { await fetch(`/api/v1/lab/samples/mark-printed?acc=${encodeURIComponent(accession)}`, { method:'POST' }); } catch {}
        }

        function makeLabelHtml(m){
          const tests = (m.tests || []).join(", ");
          return `
          <div class="label">
            <div class="hdr">
              <div class="brand">HMS • Lab</div>
              <div class="tiny ms-auto">${new Date(m.createdAtUtc).toLocaleString()}</div>
            </div>
            <div class="main">
              <div class="left">
                <div class="big mono">${m.accession}</div>
                <div class="tiny">${m.orderNo}${m.patient? " • "+m.patient : ""}${m.doctor? " • Dr. "+m.doctor : ""}</div>
                <div class="tests mono">${tests}</div>
                <span class="badge rounded-pill bg-secondary badge-status">${m.sampleStatus}</span>
              </div>
              <div class="right">
                <img class="barcode" src="/api/barcodes/code128/${encodeURIComponent(m.accession)}" alt="barcode">
              </div>
            </div>
          </div>`;
        }

        function render(){
          if(!model) return;
          const n = Math.max(1, parseInt($('#copies').value || '1', 10));
          let html="";
          for(let i=0;i<n;i++) html += makeLabelHtml(model);
          $('#host').innerHTML = html;
        }

        document.addEventListener('DOMContentLoaded', load);
    </script>

</body>
</html>
