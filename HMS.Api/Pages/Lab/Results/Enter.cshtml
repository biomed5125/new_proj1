@page "/lab/results/enter"
@{
    Layout = "_LayoutLab";
    ViewData["Title"] = "Enter Results";
    var acc = Request.Query["acc"].ToString();
}
<div class="container py-3">
    <div class="d-flex align-items-center justify-content-between">
        <h3 class="mb-0">Enter Results</h3>
        <div class="d-flex gap-2">
            <a id="linkReport" class="btn btn-outline-secondary btn-sm" target="_blank">View Report</a>
            <a id="linkLabels" class="btn btn-outline-secondary btn-sm" target="_blank">Labels</a>
        </div>
    </div>

    <div class="row g-2 mt-2">
        <div class="col-auto">
            <input id="acc" class="form-control" placeholder="Accession (ACC-...)" value="@acc">
        </div>
        <div class="col-auto">
            <button id="btnLoad" class="btn btn-primary">Load</button>
        </div>
    </div>

    <div class="card mt-3">
        <div class="table-responsive">
            <table class="table table-sm align-middle mb-0" id="tbl">
                <thead class="table-light">
                    <tr>
                        <th style="width:110px">Code</th>
                        <th>Test Name</th>
                        <th class="text-end" style="width:140px">Value</th>
                        <th style="width:90px">Unit</th>
                        <th style="width:140px">Ref. Range</th>
                        <th style="width:100px">Flag</th>
                    </tr>
                </thead>
                <tbody><tr><td colspan="6" class="text-muted">Load an accession…</td></tr></tbody>
            </table>
        </div>
    </div>

    <div class="mt-3 d-flex gap-2">
        <button class="btn btn-success" id="btnSave">Save</button>
        <button class="btn btn-outline-success" id="btnFinalize">Finalize</button>
    </div>

    <div id="msg" class="small mt-3 text-muted"></div>
</div>

@section Scripts {
    <script>
        const $=(s,r=document)=>r.querySelector(s);

        function setLinks(){
          const acc = $('#acc').value.trim();
          if(!acc) return;
          const v = Date.now();
          $('#linkLabels').href = `/lab/labels/${encodeURIComponent(acc)}?v=${v}`;
          $('#linkReport').href = `/lab/reports/${encodeURIComponent(acc)}?v=${v}`;
        }

        async function load(){
          const acc = $('#acc').value.trim();
          if(!acc) return;
          setLinks(); // <— make links fresh

          const res = await fetch(`/api/v1/lab/results/worklist?acc=${encodeURIComponent(acc)}&v=${Date.now()}`);
          if(!res.ok){
            $('#tbl tbody').innerHTML = `<tr><td colspan="6" class="text-danger">Unknown accession.</td></tr>`;
            return;
          }
          const rows = await res.json();
          $('#tbl tbody').innerHTML = rows.map(r => `
            <tr data-code="${r.code}">
              <td><span class="badge text-bg-light">${r.code}</span></td>
              <td>${r.name ?? ''}</td>
              <td class="text-end"><input class="form-control form-control-sm val text-end" value="${r.currentValue ?? ''}"></td>
              <td>${r.unit ?? ''}</td>
              <td>${(r.refLow ?? '')}${(r.refLow!=null||r.refHigh!=null?' - ':'')}${(r.refHigh ?? '')}</td>
              <td>
                <select class="form-select form-select-sm flag">
                  <option value=""></option>
                  <option value="L" ${r.flag==='L'?'selected':''}>L</option>
                  <option value="H" ${r.flag==='H'?'selected':''}>H</option>
                  <option value="A" ${r.flag==='A'?'selected':''}>A</option>
                </select>
              </td>
            </tr>`).join('') || `<tr><td colspan="6" class="text-muted">No items.</td></tr>`;
        }

        async function save(finalize){
          const acc = $('#acc').value.trim();
          const rows = [...document.querySelectorAll('#tbl tbody tr')].map(tr=>{
            const code = tr.dataset.code;
            const val  = tr.querySelector('.val').value.trim();
            const flag = tr.querySelector('.flag').value || null;
            return { accession: acc, deviceId: 0, instrumentTestCode: code, value: val||null, unit: null, flag, rawFlagOrNotes: null };
          });

          for (const r of rows) {
            await fetch('/api/v1/lab/results/upsert-by-accession', {
              method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(r)
            });
          }

          if (finalize) {
            await fetch(`/api/v1/lab/results/finalize?acc=${encodeURIComponent(acc)}`, { method:'POST' });
          }

          setLinks();
          $('#msg').textContent = finalize ? 'Saved & finalized.' : 'Saved.';

          // --- NEW: wait until report-rows returns any rows, then open
          if (finalize) {
            const ok = await (async function waitForRows(maxMs=2000){
              const start = Date.now();
              while (Date.now() - start < maxMs) {
                const v = Date.now();
                const rsp = await fetch(`/api/v1/lab/results/report-rows?acc=${encodeURIComponent(acc)}&v=${v}`, { cache: 'no-store' });
                if (rsp.ok) {
                  const arr = await rsp.json();
                  if (Array.isArray(arr) && arr.length > 0) return true;
                }
                await new Promise(r => setTimeout(r, 150));
              }
              return false;
            })();

            const v = Date.now();
            window.open(`/lab/reports/${encodeURIComponent(acc)}?v=${v}`, '_blank');
          }
        }

        $('#btnLoad').addEventListener('click', load);
        $('#btnSave').addEventListener('click', ()=>save(false));
        $('#btnFinalize').addEventListener('click', ()=>save(true));

        if($('#acc').value) load();
    </script>
}

