// <auto-generated />
using System;
using HMS.Module.Lab.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HMS.Module.Lab.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(LabDbContext))]
    partial class LabDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myBarcodeEvent", b =>
                {
                    b.Property<long>("BarcodeEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.HmsIdSeq_Lab");

                    b.Property<string>("AccessionNumber")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTimeOffset>("At")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Event")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Who")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BarcodeEventId");

                    b.HasIndex("AccessionNumber", "At");

                    b.ToTable("BarcodeEvents", (string)null);
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myDeviceInbox", b =>
                {
                    b.Property<long>("DeviceInboxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.HmsIdSeq_Lab");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<bool>("Processed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ReceivedAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("DeviceInboxId");

                    b.ToTable("DeviceInbox", (string)null);
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myDeviceOutbox", b =>
                {
                    b.Property<long>("DeviceOutboxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.HmsIdSeq_Lab");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTime>("QueuedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Sent")
                        .HasColumnType("bit");

                    b.HasKey("DeviceOutboxId");

                    b.ToTable("DeviceOutbox", (string)null);
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myInstrumentTestMap", b =>
                {
                    b.Property<long>("InstrumentTestMapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.HmsIdSeq_Lab");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<long>("DeviceId")
                        .HasColumnType("bigint");

                    b.Property<string>("InstrumentTestCode")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LabTestCode")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<long>("LabTestId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("InstrumentTestMapId");

                    b.HasIndex("LabTestCode");

                    b.HasIndex("LabTestId");

                    b.HasIndex("DeviceId", "InstrumentTestCode")
                        .IsUnique();

                    b.ToTable("InstrumentTestMap", (string)null);
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myLabDoctor", b =>
                {
                    b.Property<long>("LabDoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.HmsIdSeq_Lab");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LicenseNo")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Phone")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Specialty")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LabDoctorId");

                    b.ToTable("LabDoctors", "dbo");
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myLabInstrument", b =>
                {
                    b.Property<long>("LabInstrumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.HmsIdSeq_Lab");

                    b.Property<string>("ConnectionType")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Host")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MakeModel")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int?>("Port")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LabInstrumentId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("LabInstruments", (string)null);
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myLabPanel", b =>
                {
                    b.Property<long>("LabPanelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.HmsIdSeq_Lab");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LabPanelId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("LabPanels", (string)null);
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myLabPanelItem", b =>
                {
                    b.Property<long>("LabPanelItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.HmsIdSeq_Lab");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("LabPanelId")
                        .HasColumnType("bigint");

                    b.Property<long>("LabTestId")
                        .HasColumnType("bigint");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LabPanelItemId");

                    b.HasIndex("LabPanelId");

                    b.HasIndex("LabTestId");

                    b.ToTable("LabPanelItems", (string)null);
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myLabPatient", b =>
                {
                    b.Property<long>("LabPatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.HmsIdSeq_Lab");

                    b.Property<string>("Address")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Mrn")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Phone")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Sex")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LabPatientId");

                    b.ToTable("LabPatients", "dbo");
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myLabPatientProfile", b =>
                {
                    b.Property<long>("LabPatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.HmsIdSeq_Lab");

                    b.Property<bool>("Allergy")
                        .HasColumnType("bit");

                    b.Property<string>("AllergyNotes")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<bool>("CardiacHistory")
                        .HasColumnType("bit");

                    b.Property<bool>("ChronicAnemia")
                        .HasColumnType("bit");

                    b.Property<bool>("Diabetic")
                        .HasColumnType("bit");

                    b.Property<bool>("Dialysis")
                        .HasColumnType("bit");

                    b.Property<bool>("FattyLiver")
                        .HasColumnType("bit");

                    b.Property<bool>("HighCholesterol")
                        .HasColumnType("bit");

                    b.Property<bool>("Pacemaker")
                        .HasColumnType("bit");

                    b.Property<int>("Thyroid")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LabPatientId");

                    b.ToTable("LabPatientProfiles", "dbo");
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myLabPreanalytical", b =>
                {
                    b.Property<long>("LabPreanalyticalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.HmsIdSeq_Lab");

                    b.Property<string>("AllergyNotes")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int?>("BloodPressureDia")
                        .HasColumnType("int");

                    b.Property<int?>("BloodPressureSys")
                        .HasColumnType("int");

                    b.Property<bool>("CardiacAttackHistory")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("Dialysis")
                        .HasColumnType("bit");

                    b.Property<int?>("FastingHours")
                        .HasColumnType("int");

                    b.Property<bool>("HasAllergy")
                        .HasColumnType("bit");

                    b.Property<bool>("HasAnemia")
                        .HasColumnType("bit");

                    b.Property<bool>("HasFattyLiver")
                        .HasColumnType("bit");

                    b.Property<bool>("HasHighCholesterol")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDiabetic")
                        .HasColumnType("bit");

                    b.Property<long>("LabRequestId")
                        .HasColumnType("bigint");

                    b.Property<string>("Notes")
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<bool>("Pacemaker")
                        .HasColumnType("bit");

                    b.Property<int?>("PulseBpm")
                        .HasColumnType("int");

                    b.Property<string>("ThyroidStatus")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("TookAntibioticLast3Days")
                        .HasColumnType("bit");

                    b.HasKey("LabPreanalyticalId");

                    b.HasIndex("LabRequestId")
                        .IsUnique();

                    b.ToTable("LabPreanalyticals", (string)null);
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myLabRequest", b =>
                {
                    b.Property<long>("LabRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.HmsIdSeq_Lab");

                    b.Property<long?>("AdmissionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorDisplay")
                        .HasMaxLength(240)
                        .HasColumnType("nvarchar(240)");

                    b.Property<long?>("DoctorId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("LabDoctorId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LabPatientId")
                        .HasColumnType("bigint");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime?>("PaidAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("PatientDisplay")
                        .HasMaxLength(240)
                        .HasColumnType("nvarchar(240)");

                    b.Property<long?>("PatientId")
                        .HasColumnType("bigint");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Source")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LabRequestId");

                    b.HasIndex("DoctorId");

                    b.HasIndex("LabDoctorId");

                    b.HasIndex("LabPatientId");

                    b.HasIndex("OrderNo")
                        .IsUnique();

                    b.HasIndex("PatientId");

                    b.ToTable("LabRequests", (string)null);
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myLabRequestItem", b =>
                {
                    b.Property<long>("LabRequestItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.HmsIdSeq_Lab");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("LabRequestId")
                        .HasColumnType("bigint");

                    b.Property<string>("LabTestCode")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<long>("LabTestId")
                        .HasColumnType("bigint");

                    b.Property<string>("LabTestName")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<decimal?>("LabTestPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("LabTestUnit")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("LabRequestItemId");

                    b.HasIndex("LabTestId");

                    b.HasIndex("LabRequestId", "LabTestCode")
                        .HasDatabaseName("IX_LabRequestItems_Request_TestCode");

                    b.HasIndex("LabRequestId", "LabTestId")
                        .IsUnique()
                        .HasDatabaseName("UX_LabRequestItems_Request_Test")
                        .HasFilter("[IsDeleted] = 0");

                    b.ToTable("LabRequestItems", (string)null);
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myLabResult", b =>
                {
                    b.Property<long>("LabResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.HmsIdSeq_Lab");

                    b.Property<string>("AccessionNumber")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("ApprovedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ApprovedByDoctorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<long?>("DeviceId")
                        .HasColumnType("bigint");

                    b.Property<string>("Flag")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("InstrumentTestCode")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("LabRequestId")
                        .HasColumnType("bigint");

                    b.Property<long>("LabRequestItemId")
                        .HasColumnType("bigint");

                    b.Property<string>("LabTestCode")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<long>("LabTestId")
                        .HasColumnType("bigint");

                    b.Property<string>("LabTestName")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("RawFlag")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<decimal?>("RefHigh")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("RefLow")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasDefaultValue("Entered");

                    b.Property<string>("Unit")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Value")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<long?>("myLabRequestItemLabRequestItemId")
                        .HasColumnType("bigint");

                    b.HasKey("LabResultId");

                    b.HasIndex("AccessionNumber");

                    b.HasIndex("LabRequestId");

                    b.HasIndex("LabRequestItemId")
                        .IsUnique();

                    b.HasIndex("LabTestId");

                    b.HasIndex("myLabRequestItemLabRequestItemId");

                    b.HasIndex("AccessionNumber", "LabTestId");

                    b.HasIndex("LabRequestId", "InstrumentTestCode");

                    b.HasIndex("LabRequestId", "LabTestId");

                    b.ToTable("LabResults", (string)null);
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myLabSample", b =>
                {
                    b.Property<long>("LabSampleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.HmsIdSeq_Lab");

                    b.Property<string>("AccessionNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CollectedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("CollectedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("LabRequestId")
                        .HasColumnType("bigint");

                    b.Property<bool>("LabelPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ReceivedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReceivedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("myLabRequestLabRequestId")
                        .HasColumnType("bigint");

                    b.HasKey("LabSampleId");

                    b.HasIndex("AccessionNumber")
                        .IsUnique();

                    b.HasIndex("LabRequestId")
                        .IsUnique()
                        .HasDatabaseName("IX_LabSamples_LabRequestId")
                        .HasFilter("[IsDeleted] = 0");

                    b.HasIndex("myLabRequestLabRequestId");

                    b.ToTable("LabSamples", (string)null);
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myLabTest", b =>
                {
                    b.Property<long>("LabTestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.HmsIdSeq_Lab");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DefaultReferenceRangeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("RefHigh")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("RefLow")
                        .HasColumnType("decimal(18,4)");

                    b.Property<long>("SpecimenTypeId")
                        .HasColumnType("bigint");

                    b.Property<int?>("StabilityFrozenDays")
                        .HasColumnType("int");

                    b.Property<int?>("StabilityRefrigeratedHours")
                        .HasColumnType("int");

                    b.Property<int?>("StabilityRoomHours")
                        .HasColumnType("int");

                    b.Property<int>("TatMinutes")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LabTestId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("DefaultReferenceRangeId");

                    b.HasIndex("SpecimenTypeId");

                    b.ToTable("LabTests", (string)null);
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myReferenceRange", b =>
                {
                    b.Property<long>("ReferenceRangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.HmsIdSeq_Lab");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("LabTestId")
                        .HasColumnType("bigint");

                    b.Property<string>("Note")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<decimal?>("RefHigh")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("RefLow")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("myLabTestLabTestId")
                        .HasColumnType("bigint");

                    b.HasKey("ReferenceRangeId");

                    b.HasIndex("LabTestId");

                    b.HasIndex("myLabTestLabTestId");

                    b.ToTable("ReferenceRanges", (string)null);
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.mySpecimenType", b =>
                {
                    b.Property<long>("SpecimenTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.HmsIdSeq_Lab");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("SpecimenTypeId");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("SpecimenTypes", (string)null);
                });

            modelBuilder.Entity("HMS.Module.Lab.Infrastructure.Persistence.Seed.AppKv", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("AppKv");
                });

            modelBuilder.Entity("HMS.SharedKernel.Base.SeedRun", b =>
                {
                    b.Property<long>("SeedRunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SeedRunId"));

                    b.Property<DateTime>("AppliedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SeedRunId");

                    b.ToTable("SeedRuns");
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myInstrumentTestMap", b =>
                {
                    b.HasOne("HMS.Module.Lab.Features.Lab.Models.Entities.myLabTest", null)
                        .WithMany()
                        .HasForeignKey("LabTestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myLabPanelItem", b =>
                {
                    b.HasOne("HMS.Module.Lab.Features.Lab.Models.Entities.myLabPanel", "Panel")
                        .WithMany("Items")
                        .HasForeignKey("LabPanelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HMS.Module.Lab.Features.Lab.Models.Entities.myLabTest", "Test")
                        .WithMany()
                        .HasForeignKey("LabTestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Panel");

                    b.Navigation("Test");
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myLabPatientProfile", b =>
                {
                    b.HasOne("HMS.Module.Lab.Features.Lab.Models.Entities.myLabPatient", "LabPatient")
                        .WithOne("Profile")
                        .HasForeignKey("HMS.Module.Lab.Features.Lab.Models.Entities.myLabPatientProfile", "LabPatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LabPatient");
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myLabPreanalytical", b =>
                {
                    b.HasOne("HMS.Module.Lab.Features.Lab.Models.Entities.myLabRequest", "LabRequest")
                        .WithOne()
                        .HasForeignKey("HMS.Module.Lab.Features.Lab.Models.Entities.myLabPreanalytical", "LabRequestId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("LabRequest");
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myLabRequest", b =>
                {
                    b.HasOne("HMS.Module.Lab.Features.Lab.Models.Entities.myLabDoctor", "LabDoctor")
                        .WithMany("Requests")
                        .HasForeignKey("LabDoctorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("HMS.Module.Lab.Features.Lab.Models.Entities.myLabPatient", "LabPatient")
                        .WithMany("Requests")
                        .HasForeignKey("LabPatientId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("LabDoctor");

                    b.Navigation("LabPatient");
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myLabRequestItem", b =>
                {
                    b.HasOne("HMS.Module.Lab.Features.Lab.Models.Entities.myLabRequest", "LabRequest")
                        .WithMany("Items")
                        .HasForeignKey("LabRequestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HMS.Module.Lab.Features.Lab.Models.Entities.myLabTest", "LabTest")
                        .WithMany()
                        .HasForeignKey("LabTestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LabRequest");

                    b.Navigation("LabTest");
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myLabResult", b =>
                {
                    b.HasOne("HMS.Module.Lab.Features.Lab.Models.Entities.myLabTest", "LabTest")
                        .WithMany()
                        .HasForeignKey("LabTestId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HMS.Module.Lab.Features.Lab.Models.Entities.myLabRequestItem", null)
                        .WithMany("Results")
                        .HasForeignKey("myLabRequestItemLabRequestItemId");

                    b.Navigation("LabTest");
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myLabSample", b =>
                {
                    b.HasOne("HMS.Module.Lab.Features.Lab.Models.Entities.myLabRequest", "Request")
                        .WithMany()
                        .HasForeignKey("LabRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HMS.Module.Lab.Features.Lab.Models.Entities.myLabRequest", null)
                        .WithMany("Samples")
                        .HasForeignKey("myLabRequestLabRequestId");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myLabTest", b =>
                {
                    b.HasOne("HMS.Module.Lab.Features.Lab.Models.Entities.myReferenceRange", "DefaultReferenceRange")
                        .WithMany()
                        .HasForeignKey("DefaultReferenceRangeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("HMS.Module.Lab.Features.Lab.Models.Entities.mySpecimenType", "SpecimenType")
                        .WithMany()
                        .HasForeignKey("SpecimenTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DefaultReferenceRange");

                    b.Navigation("SpecimenType");
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myReferenceRange", b =>
                {
                    b.HasOne("HMS.Module.Lab.Features.Lab.Models.Entities.myLabTest", "LabTest")
                        .WithMany()
                        .HasForeignKey("LabTestId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("HMS.Module.Lab.Features.Lab.Models.Entities.myLabTest", null)
                        .WithMany("ReferenceRanges")
                        .HasForeignKey("myLabTestLabTestId");

                    b.Navigation("LabTest");
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myLabDoctor", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myLabPanel", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myLabPatient", b =>
                {
                    b.Navigation("Profile");

                    b.Navigation("Requests");
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myLabRequest", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Samples");
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myLabRequestItem", b =>
                {
                    b.Navigation("Results");
                });

            modelBuilder.Entity("HMS.Module.Lab.Features.Lab.Models.Entities.myLabTest", b =>
                {
                    b.Navigation("ReferenceRanges");
                });
#pragma warning restore 612, 618
        }
    }
}
