// <auto-generated />
using System;
using HMS.Communication.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HMS.Communication.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(CommunicationDbContext))]
    partial class CommunicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HMS.Communication.Domain.Entities.AnalyzerProfile", b =>
                {
                    b.Property<long>("AnalyzerProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.HmsIdSeq_Comm");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultMode")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("DriverClass")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Notes")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("PortSettings")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Protocol")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("AnalyzerProfileId");

                    b.ToTable("AnalyzerProfiles", (string)null);
                });

            modelBuilder.Entity("HMS.Communication.Domain.Entities.CommEvent", b =>
                {
                    b.Property<long>("CommEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CommEventId"));

                    b.Property<string>("Accession")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("At")
                        .HasColumnType("datetime2");

                    b.Property<long>("DeviceId")
                        .HasColumnType("bigint");

                    b.Property<string>("EventId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstrumentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kind")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabTestCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Units")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommEventId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("HMS.Communication.Domain.Entities.CommMessageInbound", b =>
                {
                    b.Property<long>("CommMessageInboundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.HmsIdSeq_Comm");

                    b.Property<string>("Ascii")
                        .IsRequired()
                        .HasMaxLength(8000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("At")
                        .HasColumnType("datetime2");

                    b.Property<string>("BusinessNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<byte[]>("Bytes")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<long>("DeviceId")
                        .HasColumnType("bigint");

                    b.Property<string>("Direction")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Transport")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("CommMessageInboundId");

                    b.ToTable("CommMessageInbound", (string)null);
                });

            modelBuilder.Entity("HMS.Communication.Domain.Entities.CommMessageOutbound", b =>
                {
                    b.Property<long>("CommMessageOutboundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.HmsIdSeq_Comm");

                    b.Property<DateTime>("At")
                        .HasColumnType("datetime2");

                    b.Property<string>("BusinessNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<long>("DeviceId")
                        .HasColumnType("bigint");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<bool>("Sent")
                        .HasColumnType("bit");

                    b.Property<string>("Transport")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("CommMessageOutboundId");

                    b.ToTable("CommMessageOutbound", (string)null);
                });

            modelBuilder.Entity("HMS.Communication.Domain.Entities.DeadLetterResult", b =>
                {
                    b.Property<long>("DeadLetterResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.HmsIdSeq_Comm");

                    b.Property<DateTime>("At")
                        .HasColumnType("datetime2");

                    b.Property<long>("DeviceId")
                        .HasColumnType("bigint");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("DeadLetterResultId");

                    b.ToTable("CommDeadLetters", (string)null);
                });

            modelBuilder.Entity("HMS.Communication.Domain.Entities.RouterRule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.HmsIdSeq_Comm");

                    b.Property<long?>("DeviceId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("RecordType")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Target")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("TestCodeRegex")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("IsEnabled", "Priority");

                    b.ToTable("RouterRule", (string)null);
                });

            modelBuilder.Entity("HMS.Communication.Infrastructure.Persistence.Entities.CommDevice", b =>
                {
                    b.Property<long>("CommDeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.HmsIdSeq_Comm");

                    b.Property<long>("AnalyzerProfileId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("PortName")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.HasKey("CommDeviceId");

                    b.HasIndex("AnalyzerProfileId");

                    b.HasIndex("DeviceCode")
                        .IsUnique();

                    b.ToTable("CommDevices", (string)null);
                });

            modelBuilder.Entity("HMS.SharedKernel.Base.SeedRun", b =>
                {
                    b.Property<long>("SeedRunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SeedRunId"));

                    b.Property<DateTime>("AppliedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SeedRunId");

                    b.ToTable("SeedRuns");
                });

            modelBuilder.Entity("HMS.Communication.Infrastructure.Persistence.Entities.CommDevice", b =>
                {
                    b.HasOne("HMS.Communication.Domain.Entities.AnalyzerProfile", "AnalyzerProfile")
                        .WithMany("Devices")
                        .HasForeignKey("AnalyzerProfileId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AnalyzerProfile");
                });

            modelBuilder.Entity("HMS.Communication.Domain.Entities.AnalyzerProfile", b =>
                {
                    b.Navigation("Devices");
                });
#pragma warning restore 612, 618
        }
    }
}
